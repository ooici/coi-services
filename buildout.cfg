[buildout]
develop =
    .
    extern/coverage-model
    extern/pyon
    extern/epu
    extern/eeagent
    extern/ion-functions
parts =
    project-directories
    python
eggs =
    coi-services
    objgraph

unzip = true

show-picked-versions = true

# extends = versions.cfg
versions = versions

# Using our server instead of Pypi for indexing when Pypi goes wrong
# index = http://sddevrepo.oceanobservatories.org/packages/

# When set to false, buildout and its recipe versions must be
# explicitly pinned down and defined.
allow-picked-versions = true

# Tells buildout where to download packages in addition to Pypi.
find-links =
    http://sddevrepo.oceanobservatories.org/releases/

[versions]
# Required by ${ceiextras} to not have conflicts with coi-services
greenlet=0.4.0
mock=0.8
nose=1.1.2
gevent=0.13.8
###
#
# set up the directory structure
#
[project-directories]
recipe = z3c.recipe.mkdir
paths =
    logs

# This hack can be taken out once port_agent is stable
[port_agent_hack]
path = ${buildout:directory}/parts/port_agent
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    rm -rf ${port_agent_hack:path}

[port_agent]
path = ${port_agent_hack:path}
recipe = zc.recipe.cmmi
url = http://sddevrepo.oceanobservatories.org/releases/port_agent-ooici-master.tar.gz
configure-options =
  --prefix=${port_agent:path}

[ceiextras]
recipe = zc.recipe.egg
eggs =
    epu
    supervisor
    eeagent
    pidantic
    dashi

[ape]
recipe = zc.recipe.egg
eggs =
    ape
index = https://github.com/ooici/ape/tarball/master#egg=ape
find-links = https://github.com/ooici/ape/tarball/master#egg=ape

[gcoverage_patch]
recipe =
    zc.recipe.egg
eggs =
    coverage==3.5.2pl1
    gevent==0.13.7.1
find-links =
    http://sddevrepo.oceanobservatories.org/releases/coverage-3.5.2pl1.tar.gz
    http://sdddevrepo.oceanobservatories.org/releases/gevent-0.13.7.1.tar.gz
[base_config]
initialization =
    import os
    os.environ['PATH'] = os.pathsep.join([os.path.join('${port_agent:path}', 'bin'), os.environ.get('PATH', '')])
    # print os.environ.get('PATH')
scripts =
    nosetests
    pycc
    pyccd
    control_cc
    generate_interfaces
    store_interfaces
    clear_couch
    ipython
    coverage
    manhole
entry-points =
    pycc=scripts.pycc:entry
    pyccd=scripts.pyccd:start_debugging
    control_cc=scripts.control_cc:main
    generate_interfaces=scripts.generate_interfaces:main
    store_interfaces=scripts.store_interfaces:main
    clear_couch=pyon.datastore.clear_couch_util:main
    ipython=scripts.ipython:main
    nosetests=nose:run_exit
    coverage=coverage:main
    manhole=scripts.manhole:main

[python]
recipe = zc.recipe.egg
interpreter = python
initialization = ${base_config:initialization}
scripts = ${base_config:scripts}
entry-points = ${base_config:entry-points}
eggs =
    ${buildout:eggs}
